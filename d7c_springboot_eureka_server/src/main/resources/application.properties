# org.springframework.boot.context.dev.ConfigFileApplicationListener.addPropertySources
# 配置文件名，默认是 application.properties
spring.config.name=application
spring.profiles.active=dev

spring.application.name=d7c-springboot-eureka-server
server.port=9000
server.tomcat.uri-encoding=UTF-8

# spring-cloud-netflix-eureka-server-2.2.2.RELEASE/META-INF/spring-configuration-metadata.json
# 是否向 eureka server 注册自己，单机不注册
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
# 续约更新时间间隔，默认是 30s
eureka.instance.lease-renewal-interval-in-seconds=10
# 续约到期时间间隔，默认是 90s
eureka.instance.lease-expiration-duration-in-seconds=30

# org.springframework.cloud.netflix.eureka.EurekaClientConfigBean
eureka.client.register-with-eureka=false
# 是否从 eureka server 注册中心获取注册信息
eureka.client.fetch-registry=false
eureka.client.initial-instance-info-replication-interval-seconds=10
# eureka 提供的服务发现地址，集群用 , 号隔开
eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/

# org.springframework.cloud.netflix.eureka.server.EurekaServerConfigBean
# 关闭服务自我保护，客户端心跳检测 15 分钟内错误率达到 80% 服务会保护，导致其他客户端还认为服务该服务可用而对服务进行保护，尤其在开发阶段频繁启停服务时更应该关闭服务保护
eureka.server.enable-self-preservation=false
# 服务清理时间间隔，默认是
eureka.server.eviction-interval-timer-in-ms=10000
# eureka 是 CAP 理论中基于 AP 策略，为了保证强一致性关闭此处，切换为 CP 策略
eureka.server.use-read-only-response-cache=true
# eureka server 刷新 readCacheMap 的时间间隔，默认是 30s。eureka client 读取的是 readCacheMap，这个时间决定了多久把 readWriteCacheMap 的服务数据更新到 readCacheMap 中
eureka.server.response-cache-update-interval-ms=3000
# eureka server 缓存 readWriteCacheMap 失效时间，失效后会从 registry（是一个 ConcurrentHashMap） 重新读取注册服务信息
eureka.server.response-cache-auto-expiration-in-seconds=180

