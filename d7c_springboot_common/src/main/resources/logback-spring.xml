<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <!-- 定义日志存放的位置 -->
	<springProperty scope="context" name="d7c_logs" source="logging.path" defaultValue="logs" />

    <!-- 开发环境只在控制台打印 -->
	<springProfile name="dev">
		<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <!-- encoder 默认配置为 PatternLayoutEncoder -->
			<encoder>
				<pattern>[d7c] %-5level [%d{yyyy-MM-dd HH:mm:ss}] %logger.%M\(%F:%L\) - %msg%n</pattern>
				<charset>UTF-8</charset>
			</encoder>
		</appender>
		<root level="info">
			<appender-ref ref="STDOUT" />
		</root>
		<logger name="org.activiti" level="debug" additivity="false">
			<appender-ref ref="STDOUT" />
		</logger>
		<logger name="top.d7c.springboot" level="debug" additivity="false">
			<appender-ref ref="STDOUT" />
		</logger>
	</springProfile>

    <!-- 生产环境 -->
	<springProfile name="pro">
        <!-- 日志记录器，日期滚动记录 -->
		<appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 正在记录的日志文件的路径及文件名 -->
			<file>${d7c_logs}/log_error.log</file>
            <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!-- 归档的日志文件的路径，例如今天是 2013-12-21 日志，当前写的日志文件路径为 file 节点指定，可以将此文件与 file 指定文件路径设置为不同路径，
                	从而将当前日志文件与归档日志文件放在不同的目录。而 2013-12-21 的日志文件由 fileNamePattern 指定，%d{yyyy-MM-dd} 指定日期格式，%i 指定索引 -->
				<fileNamePattern>${d7c_logs}/error/log_error_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <!-- 除了按日期记录日志之外，还可以配置日志文件大小不能超过 100MB，若超过 100MB，日志文件会从索引 0 开始命名日志文件，例如 log-error-2013-12-21.0.log -->
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>100MB</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
            <!-- 追加方式记录日志 -->
			<append>true</append>
            <!-- 日志文件的格式 -->
			<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>[d7c] %-5level [%d{yyyy-MM-dd HH:mm:ss}] %logger.%M\(%L\) - %msg%n</pattern>
				<charset>UTF-8</charset>
			</encoder>
            <!-- 此日志文件只记录 error 级别 -->
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>error</level>
				<onMatch>ACCEPT</onMatch>
				<onMismatch>DENY</onMismatch>
			</filter>
		</appender>

        <!-- 日志记录器，日期滚动记录 -->
		<appender name="D7C_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${d7c_logs}/d7c_log.log</file>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<fileNamePattern>${d7c_logs}/log/d7c_log_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>100MB</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
            <!-- 追加方式记录日志 -->
			<append>true</append>
            <!-- 日志文件的格式 -->
			<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<pattern>[d7c] %-5level [%d{yyyy-MM-dd HH:mm:ss}] %logger.%M\(%L\) - %msg%n</pattern>
				<charset>UTF-8</charset>
			</encoder>
		</appender>

		<root level="info">
			<appender-ref ref="ERROR_LOG" />
			<appender-ref ref="D7C_LOG" />
		</root>
	</springProfile>

</configuration>