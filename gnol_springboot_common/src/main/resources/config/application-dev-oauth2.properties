# oauth2 配置
# 允许覆盖 spring 放入到 IOC 容器中的对象，此处主要是覆盖 org.springframework.security.authentication.AuthenticationManager 对象
spring.main.allow-bean-definition-overriding=true

gnol.oauth2.application.name=gnol-springboot-oauth2

# jdbc 模式
# org.springframework.boot.autoconfigure.security.oauth2.authserver.AuthorizationServerProperties
# oauth2 检查 token url
security.oauth2.authorization.check-token-access=http://${gnol.oauth2.application.name}/oauth/check_token
security.oauth2.authorization.token-key-access=http://${gnol.oauth2.application.name}/oauth/token_key

# org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties
security.oauth2.client.user-authorization-uri=http://${gnol.oauth2.application.name}/oauth/authorize
security.oauth2.client.access-token-uri=http://${gnol.oauth2.application.name}/oauth/check_token

# org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties
security.oauth2.resource.service-id=${spring.application.name}
security.oauth2.resource.token-info-uri=http://${gnol.oauth2.application.name}/oauth/check_token
security.oauth2.resource.user-info-uri=http://${gnol.oauth2.application.name}/common/user_info

# jwt 模式
security.oauth2.resource.jwt.key-uri=http://${gnol.oauth2.application.name}/oauth/token_key
# 对称加密密钥
security.oauth2.resource.jwt.key-value=gnol-wujialong
