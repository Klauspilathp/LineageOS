# activiti 配置
# 默认是 true，表示 activiti 启动时会对数据库中所有表进行更新操作，如果表不存在则自动创建。
# 为 false 时表示 activiti 启动时对比数据库中保存的版本，如果没有表不存在或版本不匹配则抛出异常。
# 为 create-drop 时表示 activiti 启动时会先自动创建表，手动关闭引擎时自动删除表。
spring.activiti.database-schema-update=true
# 开始生成历史信息，默认是 false。
spring.activiti.db-history-used=true
# 历史记录等级，可配置的级别有：none、activity、audit、full。查看 org.activiti.engine.impl.history.HistoryLevel
# none 表示不保存任何历史数据，默认配置；
# activity 表示只保存流程实例与流程行为的数据；
# audit 表示在 activity 级别的基础上再保留流程任务及其属性的数据；
# full 表示保留所有流程数据及其相关流程参数数据。
spring.activiti.history-level=full
# 是否自动不是 resources/processes 目录下的流程文件，默认开启
spring.activiti.check-process-definitions=true

# ============================================================================
# 配置数据源
# ============================================================================
# 开启 aop
spring.aop.proxy-target-class=true
spring.aop.transaction.enabled=true

# 数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/activiti?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8&useSSL=false&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=000000
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-wait=30000
# 从连接池中取出连接前是否进行检测连接是否可用，检测失败是否从连接池中去除并尝试重取一个
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 间隔 1 分钟检查一次需要关闭的空闲连接，单位毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 一个连接在连接池中最大空闲时间，单位毫秒
spring.datasource.druid.max-evictable-idle-time-millis=1800000
spring.datasource.druid.min-evictable-idle-time-millis=1200000
# 是否自动回收泄漏的连接和超时时间，单位秒（30 分钟）
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=1800
spring.datasource.druid.validation-query=SELECT 'x'

# mybatis config
mybatis.config-location=classpath:config/mybatis-config.xml
# 扫描 Mapper.xml
mybatis.mapper-locations=classpath*:com/gnol/springboot/client/mappers/**/*.xml
# 实体包扫描，多个用逗号隔开
mybatis.type-aliases-package=com.gnol.springboot.client.dtos

# mybatis 插件配置
spring.mybatis.plugins.enabled=true
spring.mybatis.plugins.dialect=mysql
spring.mybatis.plugins.defaultPageSize=10
spring.mybatis.plugins.maxPageSize=1000
spring.mybatis.plugins.pageSqlId=Page


